#!/bin/bash

APP_HOME="$(dirname "$(readlink -f "$0")")"
APP_NAME="SOHT2 Client"
APP_JAR="${APP_HOME}/soht2-client.jar"
PID_FILE="${APP_HOME}/soht2-client.pid"
LOG_FILE="${APP_HOME}/soht2-client.log"

function checkJava() {
  JAVA_HOME="${JAVA_HOME:-$(which java | sed -rn 's|^(.+)/bin/java$|\1|p')}"
  JAVA_CMD="${JAVA_HOME}/bin/java"
  if [[ ! -x "${JAVA_CMD}" ]]; then
    echo >&2 "Java is not installed or not found in PATH."
    exit 7
  fi
  JAVA_VER=$("${JAVA_CMD}" -version 2>&1 | grep version | cut -d\" -f2 | cut -d. -f1)
  if [[ "${JAVA_VER}" -lt 21 ]]; then
    echo >&2 "Java version is ${JAVA_VER}, which is less than 21."
    exit 8
  fi
  JAVA_OPTS="${JAVA_OPTS:--Xmx256m -server -Djava.awt.headless=true} -Dspring.pid.file=${PID_FILE}"
}

function start() {
  if [[ -e "${PID_FILE}" ]]; then
    APP_PID="$(cat "${PID_FILE}")"
    if [[ -n "${APP_PID}" ]]; then
      ps -p "${APP_PID}" >/dev/null
      if [[ $? ]]; then
        echo >&2 "${APP_NAME} is already running with PID ${APP_PID}"
        exit 1
      fi
    fi
  fi
  checkJava
  echo -n "Starting ${APP_NAME}... "
  cd "${APP_HOME}" || exit 2
  # shellcheck disable=SC2086 # JAVA_OPTS contains spaces
  "${JAVA_CMD}" $JAVA_OPTS -jar "${APP_JAR}" >>"${LOG_FILE}" 2>&1 &
  sleep 1
  if [[ -e "${PID_FILE}" ]]; then
    echo "Success"
  else
    echo "Failure"
    exit 2
  fi
}

function stop() {
  status
  echo -n "Stopping ${APP_NAME}... "
  kill "${APP_PID}" 2>/dev/null
  sleep 1
  if [[ ! -e "${PID_FILE}" ]]; then
    echo "Success"
  else
    echo "Failure"
    exit 6
  fi
}

function status() {
  if [[ ! -e "${PID_FILE}" ]]; then
    echo >&2 "${APP_NAME}'s PID file doesn't exist"
    exit 3
  fi
  APP_PID="$(cat "${PID_FILE}")"
  if [[ -z "${APP_PID}" ]]; then
    echo >&2 "${APP_NAME}'s PID file exists but empty"
    exit 4
  fi
  ps -p "${APP_PID}" >/dev/null
  if [[ ! $? ]]; then
    echo >&2 "${APP_NAME} is not running but PID file exists"
    exit 5
  fi
}

case "${1}" in
start)
  start
  ;;
stop)
  stop
  ;;
restart)
  # shellcheck disable=SC2005 # Using command substitution to avoid exiting the script
  echo "$(stop)"
  sleep 1
  start
  ;;
status)
  status
  echo "${APP_NAME} is running with PID ${APP_PID}"
  ;;
*)
  echo "Usage: ${0} {start|stop|restart|status}"
  echo "Exit codes:"
  echo "  0 - Success"
  echo "  1 - Already running"
  echo "  2 - Start failure"
  echo "  3 - PID file doesn't exist"
  echo "  4 - PID file exists but empty"
  echo "  5 - Not running but PID file exists"
  echo "  6 - Stop failure"
  echo "  7 - Java not installed or not found in PATH"
  echo "  8 - Java version is less than 21"
  ;;
esac
