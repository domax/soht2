#!/bin/bash

JAVA_HOME="/Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home"
SOHT_HOME="${HOME}/soht2-client"

SOHT_NAME="SOHT2 Client"
PID_FILE="${SOHT_HOME}/soht2.pid"
LOG_FILE="${SOHT_HOME}/soht2.log"
SOHT_JAR="${SOHT_HOME}/soht2-client.jar"
JAVA_CMD="${JAVA_HOME}/bin/java"

function start() {
  if [ -e "${PID_FILE}" ]; then
    SOHT_PID="$(cat "${PID_FILE}")"
    if [ -n "${SOHT_PID}" ]; then
      ps -p $SOHT_PID >/dev/null
      if [ $? ]; then
        echo >&2 "${SOHT_NAME} is already running with PID ${SOHT_PID}"
        exit 1
      fi
    fi
  fi
  echo -n "Starting ${SOHT_NAME}... "
  "${JAVA_CMD}" -jar "${SOHT_JAR}" >>"${LOG_FILE}" 2>&1 &
  SOHT_PID=$!
  echo $SOHT_PID >"${PID_FILE}"
  sleep 1
  ps -p $SOHT_PID >/dev/null
  if [ $? ]; then
    echo "Success"
  else
    echo "Failure"
    exit 2
  fi
}

function stop() {
  status
  echo -n "Stopping ${SOHT_NAME}... "
  kill ${SOHT_PID} 2>/dev/null
  RET=$?
  if [ $RET ]; then
    echo "Success"
    rm "${PID_FILE}" >/dev/null 2>&1
  else
    echo "Failure"
    exit 6
  fi
}

function status() {
  if [ ! -e "${PID_FILE}" ]; then
    echo >&2 "${SOHT_NAME}'s PID file doesn't exist"
    exit 3
  fi
  SOHT_PID="$(cat "${PID_FILE}")"
  if [ -z "${SOHT_PID}" ]; then
    echo >&2 "${SOHT_NAME}'s PID file exists but empty"
    exit 4
  fi
  ps -p $SOHT_PID >/dev/null
  if [ ! $? ]; then
    echo >&2 "${SOHT_NAME} is not running but PID file exists"
    exit 5
  fi
}

case "${1}" in
start)
  start
  ;;
stop)
  stop
  ;;
restart)
  echo "$(stop)"
  sleep 1
  start
  ;;
status)
  status
  echo "${SOHT_NAME} is running with PID ${SOHT_PID}"
  ;;
*)
  echo "Usage: ${0} {start|stop|restart|status}"
  ;;
esac
