plugins {
  id 'java'
  id 'java-library'
  id 'jacoco'
  id 'idea'
  id 'com.diffplug.spotless' version "7.0.3"
  id 'io.spring.dependency-management' version '1.1.7'
}

repositories {
  mavenCentral()
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

idea {
  module {
    downloadSources = true
  }
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

dependencyManagement {
  imports {
    mavenBom("org.springframework.boot:spring-boot-dependencies:3.5.4")
  }
}

dependencies {
  dependencies {
    implementation 'io.vavr:vavr:0.10.7'
    compileOnly 'org.springframework:spring-core'
    compileOnly 'org.projectlombok:lombok'
    compileOnly 'org.slf4j:slf4j-api:2.0.17'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind'
    testImplementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
  }
}

test {
  useJUnitPlatform()
  jvmArgs "-javaagent:${configurations.testRuntimeClasspath.find { it.name.contains('mockito-core') }}", '-Xshare:off'
  finalizedBy jacocoTestReport
}

jacocoTestReport {
  dependsOn test
  reports {
    xml.required = false
    csv.required = false
  }
}

jacoco {
  toolVersion = "0.8.13"
}

spotless {
  java {
    removeUnusedImports('cleanthat-javaparser-unnecessaryimport')
    // apply a specific flavor of google-java-format
    googleJavaFormat('1.27.0').reflowLongStrings(true).reorderImports(true)
    // fix formatting of type annotations
    formatAnnotations()
    // make sure every file has the following copyright header.
    licenseHeader '/* SOHT2 Â© Licensed under MIT $YEAR. */'
  }
}
